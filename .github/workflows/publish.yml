name: Publish

on:
  push:
    tags: [ 'v*' ]
    branches: [ 'master', '[0-9]+.[0-9]+', '[0-9]+.[0-9]+.[0-9]+', 'publish' ]

env:
  GIT_REF: ${{ github.ref }}
  SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
  SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}

jobs:
  create-staging-repository:
    name: Create staging repository
    runs-on: ubuntu-latest
    outputs:
      repository_id: ${{ steps.create.outputs.repository_id }}
    steps:
      - id: create
        uses: nexus-actions/create-nexus-staging-repo@v1.1
        with:
          username: ${{ secrets.OSSRH_USERNAME }}
          password: ${{ secrets.OSSRH_TOKEN }}
          staging_profile_id: ${{ secrets.SONATYPE_PROFILE_ID }}
  build-upload:
    name: "Build, Check, and Publish"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            gradlew: ./gradlew
          - os: macos-latest
            gradlew: ./gradlew
          - os: windows-latest
            gradlew: .\gradlew.bat
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build, Check, Publish
        run: ${{matrix.os.gradlew}} build check publish
  drop-or-release:
    needs: [ create-staging-repository, build-upload ]
    runs-on: ubuntu-latest
    if: ${{ always() && needs.create_staging_repository.result == 'success' }}
    steps:
      - name: Discard
        if: ${{ needs.build-upload.result != 'success' }}
        uses: nexus-actions/drop-nexus-staging-repo@v1
        with:
          username: ${{ secrets.OSSRH_USERNAME }}
          password: ${{ secrets.OSSRH_TOKEN }}
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
      - name: Release
        if: ${{ needs.build-upload.result == 'success' }}
        uses: nexus-actions/release-nexus-staging-repo@v1
        with:
          username: ${{ secrets.OSSRH_USERNAME }}
          password: ${{ secrets.OSSRH_TOKEN }}
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
